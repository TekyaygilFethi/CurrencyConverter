// SPDX-License-Integration: MIT

pragma solidity >=0.6.0 <0.9.0;
import "./ConversionBase.sol";

contract KovanConversion is ConversionBase {
    string[] pairs = [
        "AMPL / ETH",
        "AUD / USD",
        "BAT / ETH",
        "BAT / USD",
        "BNB / USD",
        "BTC / ETH",
        "BTC / USD",
        "BUSD / ETH",
        "BZRX / ETH",
        "CHF / USD",
        "COMP / USD",
        "Celsius ADA PoR",
        "DAI / ETH",
        "DAI / USD",
        "ENJ / ETH",
        "ETH / USD",
        "ETH / USDT RSI 4h",
        "EUR / USD",
        "Fast Gas Gwei",
        "GBP / USD",
        "JPY / USD",
        "KNC / ETH",
        "KRW / USD",
        "LINK / ETH",
        "LINK / USD",
        "LTC / USD",
        "MANA / ETH",
        "MKR / ETH",
        "Oil / USD",
        "PHP / USD",
        "REP / ETH",
        "REP / USD",
        "SNX / ETH",
        "SNX / USD",
        "TRX / USD",
        "TSLA / USD",
        "TUSD / ETH",
        "UNI / USD",
        "USDC / ETH",
        "USDC / USD",
        "USDT / ETH",
        "USDT / USD",
        "VELO / USD",
        "XAG / USD",
        "XAU / USD",
        "XRP / USD",
        "XTZ / USD",
        "ZRX / ETH",
        "ZRX / USD",
        "sCEX / USD",
        "sDEFI / USD"
    ];
    address[] addresses = [
        0x562C092bEb3a6DF77aDf0BB604F52c018E4f2814,
        0x5813A90f826e16dB392abd2aF7966313fc1fd5B8,
        0x0e4fcEC26c9f85c3D714370c98f43C4E02Fc35Ae,
        0x8e67A0CFfbbF6A346ce87DFe06daE2dc782b3219,
        0x8993ED705cdf5e84D0a3B754b5Ee0e1783fcdF16,
        0xF7904a295A029a3aBDFFB6F12755974a958C7C25,
        0x6135b13325bfC4B00278B4abC5e20bbce2D6580e,
        0xbF7A18ea5DE0501f7559144e702b29c55b055CcB,
        0x9aa9da35DC44F93D90436BfE256f465f720c3Ae5,
        0xed0616BeF04D374969f302a34AE4A63882490A8C,
        0xECF93D14d25E02bA2C13698eeDca9aA98348EFb6,
        0xAFb12299b2658ab4F8e08300C17845eAea5F8b90,
        0x22B58f1EbEDfCA50feF632bD73368b2FdA96D541,
        0x777A68032a88E5A84678A77Af2CD65A7b3c0775a,
        0xfaDbe2ee798889F02d1d39eDaD98Eff4c7fe95D4,
        0x9326BFA02ADD2366b30bacB125260Af641031331,
        0x10900f50d1bC46b4Ed796C50A4Cc63791CaF7501,
        0x0c15Ab9A0DB086e062194c273CC79f41597Bbf13,
        0x3D400312Bb3456f4dC06D528B55707F08dFFD664,
        0x28b0061f44E6A9780224AA61BEc8C3Fcb0d37de9,
        0xD627B1eF3AC23F1d3e576FA6206126F3c1Bd0942,
        0xb8E8130d244CFd13a75D6B9Aee029B1C33c808A7,
        0x9e465c5499023675051517E9Ee5f4C334D91e369,
        0x3Af8C569ab77af5230596Acf0E8c2F9351d24C38,
        0x396c5E36DD0a0F5a5D33dae44368D4193f69a1F0,
        0xCeE03CF92C7fFC1Bad8EAA572d69a4b61b6D4640,
        0x1b93D8E109cfeDcBb3Cc74eD761DE286d5771511,
        0x0B156192e04bAD92B6C1C13cf8739d14D78D5701,
        0x48c9FF5bFD7D12e3C511022A6E54fB1c5b8DC3Ea,
        0x84fdC8dD500F29902C99c928AF2A91970E7432b6,
        0x3A7e6117F2979EFf81855de32819FBba48a63e9e,
        0x8f4e77806EFEC092A279AC6A49e129e560B4210E,
        0xF9A76ae7a1075Fe7d646b06fF05Bd48b9FA5582e,
        0x31f93DA9823d737b7E44bdee0DF389Fe62Fd1AcD,
        0x9477f0E5bfABaf253eacEE3beE3ccF08b46cc79c,
        0xb31357d152638fd1ae0853d24b9Ea81dF29E3EF2,
        0x7aeCF1c19661d12E962b69eBC8f6b2E63a55C660,
        0xDA5904BdBfB4EF12a3955aEcA103F51dc87c7C39,
        0x64EaC61A2DFda2c3Fa04eED49AA33D021AeC8838,
        0x9211c6b3BF41A10F78539810Cf5c64e1BB78Ec60,
        0x0bF499444525a23E7Bb61997539725cA2e928138,
        0x2ca5A90D34cA333661083F89D831f757A9A50148,
        0x6d393f929E213D2Ca67A7FA73108A42b884F5f74,
        0x4594051c018Ac096222b5077C3351d523F93a963,
        0xc8fb5684f2707C82f28595dEaC017Bfdf44EE9c5,
        0x3eA2b7e3ed9EA9120c3d6699240d1ff2184AC8b3,
        0xC6F39246494F25BbCb0A8018796890037Cb5980C,
        0xBc3f28Ccc21E9b5856E81E6372aFf57307E2E883,
        0x24D6B177CF20166cd8F55CaaFe1c745B44F6c203,
        0xA85646318D20C684f6251097d24A6e74Fe1ED5eB,
        0x70179FB2F3A0a5b7FfB36a235599De440B0922ea
    ];

    constructor() public ConversionBase(pairs, addresses) {
        mapPairsWithAddresses();
    }
}
